version: '3.5'
services:
  api01: # API - Instância 01
    build:
      context: .
    network_mode: host
    hostname: api01
    depends_on:
      - db
    environment:
      SERVER_PORT: 8081
      URL_DB: 'jdbc:mysql://localhost:3306/persondb?useSSL=false'
      LOG_LEVEL: ERROR
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 500M

  api02: # API - Instância 02
    build:
      context: .
    network_mode: host
    hostname: api02
    depends_on:
      - db
    environment:
      SERVER_PORT: 8082
      URL_DB: 'jdbc:mysql://localhost:3306/persondb?useSSL=false'
      LOG_LEVEL: ERROR
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 500M

  nginx:
    image: nginx:latest
    container_name: nginx
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  db:
    image: mysql:5.7
    network_mode: host
    hostname: db
    restart: always
    environment:
      MYSQL_DATABASE: 'persondb'
      MYSQL_USER: 'jjuser'
      MYSQL_PASSWORD: 'person'
      MYSQL_ROOT_PASSWORD: 'person'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --innodb_buffer_pool_size=512M --innodb_log_buffer_size=64M --innodb_flush_log_at_trx_commit=2 --innodb_flush_method=O_DIRECT

#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - '8080:8080'